{"id":"node_modules\\rxjs\\observable\\RangeObservable.js","dependencies":[{"name":"C:\\Users\\chenfeiyu\\Desktop\\rxjs-demo\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1533714803725},{"name":"C:\\Users\\chenfeiyu\\Desktop\\rxjs-demo\\package.json","includedInParent":true,"mtime":1533714072213},{"name":"C:\\Users\\chenfeiyu\\Desktop\\rxjs-demo\\.babelrc","includedInParent":true,"mtime":1533696067133},{"name":"../Observable","loc":{"line":7,"column":27},"parent":"C:\\Users\\chenfeiyu\\Desktop\\rxjs-demo\\node_modules\\rxjs\\observable\\RangeObservable.js","resolved":"C:\\Users\\chenfeiyu\\Desktop\\rxjs-demo\\node_modules\\rxjs\\Observable.js"}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar RangeObservable = (function (_super) {\n    __extends(RangeObservable, _super);\n    function RangeObservable(start, count, scheduler) {\n        _super.call(this);\n        this.start = start;\n        this._count = count;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits a sequence of numbers within a specified\n     * range.\n     *\n     * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n     *\n     * <img src=\"./img/range.png\" width=\"100%\">\n     *\n     * `range` operator emits a range of sequential integers, in order, where you\n     * select the `start` of the range and its `length`. By default, uses no\n     * IScheduler and just delivers the notifications synchronously, but may use\n     * an optional IScheduler to regulate those deliveries.\n     *\n     * @example <caption>Emits the numbers 1 to 10</caption>\n     * var numbers = Rx.Observable.range(1, 10);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link timer}\n     * @see {@link interval}\n     *\n     * @param {number} [start=0] The value of the first integer in the sequence.\n     * @param {number} [count=0] The number of sequential integers to generate.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emissions of the notifications.\n     * @return {Observable} An Observable of numbers that emits a finite range of\n     * sequential integers.\n     * @static true\n     * @name range\n     * @owner Observable\n     */\n    RangeObservable.create = function (start, count, scheduler) {\n        if (start === void 0) { start = 0; }\n        if (count === void 0) { count = 0; }\n        return new RangeObservable(start, count, scheduler);\n    };\n    RangeObservable.dispatch = function (state) {\n        var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(start);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        state.start = start + 1;\n        this.schedule(state);\n    };\n    /** @deprecated internal use only */ RangeObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var start = this.start;\n        var count = this._count;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(RangeObservable.dispatch, 0, {\n                index: index, count: count, start: start, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                if (index++ >= count) {\n                    subscriber.complete();\n                    break;\n                }\n                subscriber.next(start++);\n                if (subscriber.closed) {\n                    break;\n                }\n            } while (true);\n        }\n    };\n    return RangeObservable;\n}(Observable_1.Observable));\nexports.RangeObservable = RangeObservable;\n//# sourceMappingURL=RangeObservable.js.map","map":{"mappings":[{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules\\rxjs\\observable\\RangeObservable.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}}],"sources":{"node_modules\\rxjs\\observable\\RangeObservable.js":"\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar RangeObservable = (function (_super) {\n    __extends(RangeObservable, _super);\n    function RangeObservable(start, count, scheduler) {\n        _super.call(this);\n        this.start = start;\n        this._count = count;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits a sequence of numbers within a specified\n     * range.\n     *\n     * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n     *\n     * <img src=\"./img/range.png\" width=\"100%\">\n     *\n     * `range` operator emits a range of sequential integers, in order, where you\n     * select the `start` of the range and its `length`. By default, uses no\n     * IScheduler and just delivers the notifications synchronously, but may use\n     * an optional IScheduler to regulate those deliveries.\n     *\n     * @example <caption>Emits the numbers 1 to 10</caption>\n     * var numbers = Rx.Observable.range(1, 10);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link timer}\n     * @see {@link interval}\n     *\n     * @param {number} [start=0] The value of the first integer in the sequence.\n     * @param {number} [count=0] The number of sequential integers to generate.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emissions of the notifications.\n     * @return {Observable} An Observable of numbers that emits a finite range of\n     * sequential integers.\n     * @static true\n     * @name range\n     * @owner Observable\n     */\n    RangeObservable.create = function (start, count, scheduler) {\n        if (start === void 0) { start = 0; }\n        if (count === void 0) { count = 0; }\n        return new RangeObservable(start, count, scheduler);\n    };\n    RangeObservable.dispatch = function (state) {\n        var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(start);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        state.start = start + 1;\n        this.schedule(state);\n    };\n    /** @deprecated internal use only */ RangeObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var start = this.start;\n        var count = this._count;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(RangeObservable.dispatch, 0, {\n                index: index, count: count, start: start, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                if (index++ >= count) {\n                    subscriber.complete();\n                    break;\n                }\n                subscriber.next(start++);\n                if (subscriber.closed) {\n                    break;\n                }\n            } while (true);\n        }\n    };\n    return RangeObservable;\n}(Observable_1.Observable));\nexports.RangeObservable = RangeObservable;\n//# sourceMappingURL=RangeObservable.js.map"},"lineCount":96}},"hash":"9ca21cb37d0f7b4c92cf63b52a810b0f","cacheData":{"env":{}}}