{"id":"node_modules\\rxjs\\util\\Set.js","dependencies":[{"name":"C:\\Users\\chenfeiyu\\Desktop\\rxjs-demo\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1533714803725},{"name":"C:\\Users\\chenfeiyu\\Desktop\\rxjs-demo\\package.json","includedInParent":true,"mtime":1533714072213},{"name":"C:\\Users\\chenfeiyu\\Desktop\\rxjs-demo\\.babelrc","includedInParent":true,"mtime":1533696067133},{"name":"./root","loc":{"line":2,"column":21},"parent":"C:\\Users\\chenfeiyu\\Desktop\\rxjs-demo\\node_modules\\rxjs\\util\\Set.js","resolved":"C:\\Users\\chenfeiyu\\Desktop\\rxjs-demo\\node_modules\\rxjs\\util\\root.js"}],"generated":{"js":"\"use strict\";\nvar root_1 = require('./root');\nfunction minimalSetImpl() {\n    // THIS IS NOT a full impl of Set, this is just the minimum\n    // bits of functionality we need for this library.\n    return (function () {\n        function MinimalSet() {\n            this._values = [];\n        }\n        MinimalSet.prototype.add = function (value) {\n            if (!this.has(value)) {\n                this._values.push(value);\n            }\n        };\n        MinimalSet.prototype.has = function (value) {\n            return this._values.indexOf(value) !== -1;\n        };\n        Object.defineProperty(MinimalSet.prototype, \"size\", {\n            get: function () {\n                return this._values.length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        MinimalSet.prototype.clear = function () {\n            this._values.length = 0;\n        };\n        return MinimalSet;\n    }());\n}\nexports.minimalSetImpl = minimalSetImpl;\nexports.Set = root_1.root.Set || minimalSetImpl();\n//# sourceMappingURL=Set.js.map","map":{"mappings":[{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules\\rxjs\\util\\Set.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}}],"sources":{"node_modules\\rxjs\\util\\Set.js":"\"use strict\";\nvar root_1 = require('./root');\nfunction minimalSetImpl() {\n    // THIS IS NOT a full impl of Set, this is just the minimum\n    // bits of functionality we need for this library.\n    return (function () {\n        function MinimalSet() {\n            this._values = [];\n        }\n        MinimalSet.prototype.add = function (value) {\n            if (!this.has(value)) {\n                this._values.push(value);\n            }\n        };\n        MinimalSet.prototype.has = function (value) {\n            return this._values.indexOf(value) !== -1;\n        };\n        Object.defineProperty(MinimalSet.prototype, \"size\", {\n            get: function () {\n                return this._values.length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        MinimalSet.prototype.clear = function () {\n            this._values.length = 0;\n        };\n        return MinimalSet;\n    }());\n}\nexports.minimalSetImpl = minimalSetImpl;\nexports.Set = root_1.root.Set || minimalSetImpl();\n//# sourceMappingURL=Set.js.map"},"lineCount":33}},"hash":"4fe27ce1b2641c7ba1c38d9e4a529767","cacheData":{"env":{}}}